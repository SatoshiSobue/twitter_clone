{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/satoshi/twitter_clone/components/CreateTweetForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Row, Col, Input } from \"antd\";\nimport { mutate } from \"swr\";\nimport { useState } from \"react\";\nimport { useFeed } from \"./util/hooks\";\nexport var CreateTweetForm = function CreateTweetForm() {\n  _s();\n\n  var _useState = useState(\"\"),\n      input = _useState[0],\n      setInput = _useState[1];\n\n  var _useFeed = useFeed(),\n      feed = _useFeed.feed;\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      padding: \"2rem\"\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault(); // we include \"false\" here to ask SWR not to revalidate the cache with\n                // the feed returned from the server. we'll remove this after the next section\n\n                mutate(\"/api/feed\", [{\n                  text: input,\n                  author: {\n                    username: \"Marshall Mathers\"\n                  }\n                }].concat(_toConsumableArray(feed)), false);\n                setInput(\"\");\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: input,\n          onChange: function onChange(e) {\n            return setInput(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateTweetForm, \"QBP22AytmxOfgLVhenW7cwN9UIs=\", false, function () {\n  return [useFeed];\n});\n\n_c = CreateTweetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTweetForm\");","map":{"version":3,"sources":["/Users/satoshi/twitter_clone/components/CreateTweetForm.tsx"],"names":["Button","Row","Col","Input","mutate","useState","useFeed","CreateTweetForm","input","setInput","feed","padding","e","preventDefault","text","author","username","target","value"],"mappings":";;;;;;;;;AACA,SAASA,MAAT,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,KAApC,QAAiD,MAAjD;AACA,SAASC,MAAT,QAAuB,KAAvB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAAA,kBACTF,QAAQ,CAAC,EAAD,CADC;AAAA,MAC5BG,KAD4B;AAAA,MACrBC,QADqB;;AAAA,iBAElBH,OAAO,EAFW;AAAA,MAE3BI,IAF2B,YAE3BA,IAF2B;;AAInC,sBACE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADT;AAEE,IAAA,QAAQ;AAAA,0EAAE,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AACRA,gBAAAA,CAAC,CAACC,cAAF,GADQ,CAGR;AACA;;AAEAT,gBAAAA,MAAM,CACJ,WADI,GAEH;AAAEU,kBAAAA,IAAI,EAAEN,KAAR;AAAeO,kBAAAA,MAAM,EAAE;AAAEC,oBAAAA,QAAQ,EAAE;AAAZ;AAAvB,iBAFG,4BAE2DN,IAF3D,IAGJ,KAHI,CAAN;AAMAD,gBAAAA,QAAQ,CAAC,EAAD,CAAR;;AAZQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAFV;AAAA,2BAiBE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAED,KAAd;AAAqB,UAAA,QAAQ,EAAE,kBAAAI,CAAC;AAAA,mBAAIH,QAAQ,CAACG,CAAC,CAACK,MAAF,CAASC,KAAV,CAAZ;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF,eAKE,QAAC,GAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBF;AAAA;AAAA;AAAA;AAAA,WADF;AA6BD,CAjCM;;GAAMX,e;UAEMD,O;;;KAFNC,e","sourcesContent":["\nimport { Button, message, Row, Col, Input } from \"antd\"\nimport { mutate } from \"swr\"\nimport { fetcher } from \"./util/fetcher\"\nimport { useState } from \"react\"\nimport { useFeed } from \"./util/hooks\"\n\nexport const CreateTweetForm = () => {\n  const [input, setInput] = useState(\"\")\n  const { feed } = useFeed()\n\n  return (\n    <form\n      style={{ padding: \"2rem\" }}\n      onSubmit={async e => {\n        e.preventDefault()\n\n        // we include \"false\" here to ask SWR not to revalidate the cache with\n        // the feed returned from the server. we'll remove this after the next section\n\n        mutate(\n          \"/api/feed\",\n          [{ text: input, author: { username: \"Marshall Mathers\" } }, ...feed],\n          false\n        )\n\n        setInput(\"\")\n      }}\n    >\n      <Row>\n        <Col>\n          <Input value={input} onChange={e => setInput(e.target.value)} />\n        </Col>\n\n        <Col>\n          <Button htmlType=\"submit\">Tweet</Button>\n        </Col>\n      </Row>\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}