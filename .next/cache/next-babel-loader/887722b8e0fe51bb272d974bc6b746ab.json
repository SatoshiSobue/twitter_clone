{"ast":null,"code":"import { PrismaClient } from \"@prisma/client\";\nconst prisma = new PrismaClient();\nexport default (async (req, res) => {\n  const {\n    text\n  } = req.body;\n  const tweet = await prisma.tweet.create({\n    data: {\n      text\n    }\n  });\n  res.json(tweet);\n});","map":{"version":3,"sources":["/Users/satoshi/twitter_clone/pages/api/tweet/create.ts"],"names":["PrismaClient","prisma","req","res","text","body","tweet","create","data","json"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,MAAMC,MAAM,GAAG,IAAID,YAAJ,EAAf;AAEA,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAWF,GAAG,CAACG,IAArB;AACA,QAAMC,KAAK,GAAG,MAAML,MAAM,CAACK,KAAP,CAAaC,MAAb,CAAoB;AAAEC,IAAAA,IAAI,EAAE;AAAEJ,MAAAA;AAAF;AAAR,GAApB,CAApB;AACAD,EAAAA,GAAG,CAACM,IAAJ,CAASH,KAAT;AACD,CAJD","sourcesContent":["import { PrismaClient } from \"@prisma/client\"\nconst prisma = new PrismaClient()\n\nexport default async (req, res) => {\n  const { text } = req.body\n  const tweet = await prisma.tweet.create({ data: { text } })\n  res.json(tweet)\n}\n"]},"metadata":{},"sourceType":"module"}