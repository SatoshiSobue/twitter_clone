{"ast":null,"code":"import { PrismaClient } from \"@prisma/client\";\nconst prisma = new PrismaClient();\nexport default (async (req, res) => {\n  const tweets = await prisma.tweet.findMany({\n    orderBy: {\n      createdAt: \"desc\"\n    },\n    include: {\n      author: {\n        select: {\n          username: true,\n          id: true\n        }\n      }\n    }\n  });\n  res.json(tweets);\n});","map":{"version":3,"sources":["/Users/satoshi/twitter_clone/pages/api/feed.ts"],"names":["PrismaClient","prisma","req","res","tweets","tweet","findMany","orderBy","createdAt","include","author","select","username","id","json"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,MAAMC,MAAM,GAAG,IAAID,YAAJ,EAAf;AAEA,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,KAAP,CAAaC,QAAb,CAAsB;AACzCC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADgC;AAEzCC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,EAAE,EAAE;AAAtB;AAAV;AAAV;AAFgC,GAAtB,CAArB;AAIAV,EAAAA,GAAG,CAACW,IAAJ,CAASV,MAAT;AACD,CAND","sourcesContent":["import { PrismaClient } from \"@prisma/client\"\nconst prisma = new PrismaClient()\n\nexport default async (req, res) => {\n  const tweets = await prisma.tweet.findMany({\n    orderBy: { createdAt: \"desc\" },\n    include: { author: { select: { username: true, id: true } } },\n  })\n  res.json(tweets)\n}\n"]},"metadata":{},"sourceType":"module"}