{"ast":null,"code":"import { PrismaClient } from \"@prisma/client\";\nimport jwt from \"jsonwebtoken\";\nexport default (async (req, res) => {\n  const prisma = new PrismaClient();\n  const {\n    token\n  } = req.cookies;\n\n  if (token) {\n    // Get authenticated user\n    const {\n      _id,\n      username\n    } = jwt.verify(token, process.env.JWT_SECRET);\n    const {\n      text\n    } = req.body;\n    const tweet = await prisma.tweet.create({\n      data: {\n        text,\n        author: {\n          connect: {\n            username\n          }\n        }\n      }\n    });\n    res.json(tweet);\n  } else {\n    res.json({\n      error: \"You must be logged in to tweet.\"\n    });\n  }\n});","map":{"version":3,"sources":["/Users/satoshi/twitter_clone/pages/api/tweet/create.ts"],"names":["PrismaClient","jwt","req","res","prisma","token","cookies","_id","username","verify","process","env","JWT_SECRET","text","body","tweet","create","data","author","connect","json","error"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAMC,MAAM,GAAG,IAAIJ,YAAJ,EAAf;AAEA,QAAM;AAAEK,IAAAA;AAAF,MAAYH,GAAG,CAACI,OAAtB;;AAEA,MAAID,KAAJ,EAAW;AACT;AACA,UAAM;AAAEE,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAoBP,GAAG,CAACQ,MAAJ,CAAWJ,KAAX,EAAkBK,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAA1B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAWX,GAAG,CAACY,IAArB;AAEA,UAAMC,KAAK,GAAG,MAAMX,MAAM,CAACW,KAAP,CAAaC,MAAb,CAAoB;AACtCC,MAAAA,IAAI,EAAE;AAAEJ,QAAAA,IAAF;AAAQK,QAAAA,MAAM,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAEX,YAAAA;AAAF;AAAX;AAAhB;AADgC,KAApB,CAApB;AAGAL,IAAAA,GAAG,CAACiB,IAAJ,CAASL,KAAT;AACD,GATD,MASO;AACLZ,IAAAA,GAAG,CAACiB,IAAJ,CAAS;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAT;AACD;AACF,CAjBD","sourcesContent":["import { PrismaClient } from \"@prisma/client\"\nimport jwt from \"jsonwebtoken\"\nexport default async (req, res) => {\n  const prisma = new PrismaClient()\n\n  const { token } = req.cookies\n\n  if (token) {\n    // Get authenticated user\n    const { _id, username } = jwt.verify(token, process.env.JWT_SECRET)\n    const { text } = req.body\n\n    const tweet = await prisma.tweet.create({\n      data: { text, author: { connect: { username } } },\n    })\n    res.json(tweet)\n  } else {\n    res.json({ error: \"You must be logged in to tweet.\" })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}